/*===========================================================================
&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args dem shaded quad tile:REST
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 18-Sept-2k
&ty     ::Step 9::  (see scripts\__ReadMe.aml)
&ty
&ty     - generate shaded relief grids from existing DEMs
&ty
&ty     Autorun: &r %aml$file% {source_grid} {output_grid} {quad} {tile(s)}
&ty --------------------------------------------------------------------------
&if [null %quad%] &then &do
    &s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.
    &end

&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml
&workspace %.home%

/* put header variables and other semi-global code here
&if [null %dem%] &then ~
    &set dem = [response 'Enter name of source grid (dem)' dem]
&if [null %shaded%] &then ~
    &set shaded = [response 'Enter name of output grid (%dem%_hs)' %dem%_hs]

/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &set quad = [listfile * -directory]
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile * -directory]
/* check for tile argument
&if not [null %tile%] &then &set tile_arg = yes


&do quad &list [unquote %quad%]
  &workspace %quad%; &type ...entering %quad%
    /* check for TODO list on the command line, else TODO = existing workspaces
    &if [null %tile%] &then &set tile_list = [listfile * -workspace]
      &else &set tile_list = [unquote %tile%]

        &do tile &list [unquote %tile_list%]
            &call main
        &end

    /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
    &if not [variable tile_arg] &then &set tile =

  &workspace  %.home%
&end

&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
&if not [exists %tile%\%dem% -grid] &then &return
  &workspace %tile%
    /*-------mark workspace busy----------------------
    &if [exists lock -file] &then &return
    &set lockfile = [OPEN lock openstat -write]
    &if  %openstat% = 0 &then &type ...workspace %tile% locked
        &else &return Error %openstat% opening lockfile
    /*------------------------------------------------

    /* uncomment to overwrite existing shaded relief images
    /*&if [exists %shaded% -grid] &then kill %shaded% all

    /* use flattened lake dem if it exists
    &if [exists %dem%_flak -grid] &then &do
      &set save-dem = %dem% ; &set dem = %dem%_flak ; &end

    &if not [exists %shaded% -grid] &then hillshade %dem% %shaded% 315 70

    &if [variable save-dem] &then &do
      &set dem = %save-dem% ; &delvar save-dem ; &end

    /*-------mark workspace not busy-----------------
    &if [close %lockfile%] = 0 &then
        &type ...workspace %tile% unlocked
        &else &return Error closing lockfile
    &sys del lock
    /*-----------------------------------------------
  &workspace ..
&RETURN
/*---------------------------------------------------------------------------
/* other routines go here

&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================
/* End Of Template
/*===========================================================================

