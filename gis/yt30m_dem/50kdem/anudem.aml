&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tile:REST
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 13-Oct-2k
&ty     ::Step #::  (see scripts\__ReadMe.aml)
&ty
&ty      - export covers to ungenerate
&ty      - build ANUDEM command file
&ty      - run ANUDEM
&ty      - convert ANUDEM dem into an Arc Grid
&ty
&ty     Autorun: &r %aml$file% {quad} {tile(s)}
&ty --------------------------------------------------------------------------
&if [null %quad%] &then &do
    &s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.
    &end

&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml
&workspace %.home%

/* put header variables and other semi-global code here
&set elev = Z_metric
&set contours = fctr
&set watercourses = fwtc_f
&set lake_ctr = lake_ctr   /* lake boundarys as contours
&set cover_list = %contours% %watercourses% %lake_ctr%
&set feature = line /* TODO: update for poly covers so we can include boundary and lake polygons
&set cell-size = 30  /* pixel size in meters
&set dem = dem       /* the dem name, when in ArcInfo


/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &set quad = [listfile * -directory]
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile * -directory]
/* check for tile argument
&if not [null %tile%] &then &set tile_arg = yes

&do quad &list [unquote %quad%]
  &workspace %quad%; &type ...entering %quad%
    /* check for TODO list on the command line, else TODO = existing workspaces
    &if [null %tile%] &then &set tile = [listfile * -workspace]

        &do tile &list [unquote %tile%]
            &workspace %.home%\%quad%
            &if [exists %tile%\%dem% -grid] &then &goto End_tile

            &if not [exists %tile%\%watercourses% -cover] ~
               AND not [exists %tile%\flip_streams.done -file] &then &do
               &type ... %tile%\%watercourses% does not exist, switching to FLIP_GRID mode
               &set save-cell = %cell-size% ; &set cell-size = 200
               &set save-dem = %dem% ; &set dem = flip_grd
               &set save-cover_list = %cover_list% ; &set cover_list = %contours% %lake_ctr%
               &end

            &CALL MAIN
            &label End_Tile

            &if %dem% = flip_grd &then &do
               &set cell-size = %save-cell%
               &set dem = %save-dem%
               &set cover_list = %save-cover_list%
               &end

        &end

    /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
    &if not [variable tile_arg] &then &set tile =

  &workspace  ..
&end

&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
  &workspace %tile%
    /*-------mark workspace busy----------------------
    &if [exists lock -file] &then &return
    &set lockfile = [OPEN lock openstat -write]
    &if  %openstat% = 0 &then &type ...workspace %tile% locked
        &else &return Error %openstat% opening lockfile
    /*------------------------------------------------
      &type ___[date -vfull] * Minutes past: [calc [extract 2 [show &pt all]] / 60]

         &set out-dem = %tile%.dem /* anudem ouput dem file

         /* export to ungenerate files
         &run cover2generate %feature% %elev% %cover_list%
         /* build the ANUDEM command file
         &run build_dem_cmd %tile% %cell-size% %elev% %cover_list%
         /* Run Anudem
         &run run_anudem %out-dem% %tile%-dem.cmd anudem.log overwrite %tile%
         /* Convert the dem to ArcInfo grid
         &run adem2grid %out-dem% %dem%

      &type ___[date -vfull] * Minutes past: [calc [extract 2 [show &pt all]] / 60]
    /*-------mark workspace not busy-----------------
    &if [close %lockfile%] = 0 &then
        &type ...workspace %tile% unlocked
        &else &return Error closing lockfile
    &sys del lock
    /*-----------------------------------------------
  &workspace ..
&return
/* ------------------------------------------------------------------------
&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================
