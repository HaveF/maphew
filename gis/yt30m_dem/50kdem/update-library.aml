&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tile:REST
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 18-Sept-2k
&ty     ::Step #::  (see scripts\__ReadMe.aml)
&ty
&ty     - merges updated covers (eg. flipped streams) back into the repository
&ty     * PLEASE BE CAREEFUL. Study the AML before running.
&ty     * replacement cover|grid is hard coded, edit file before running
&ty
&ty     Autorun: &r %aml$file% {quad} {tile(s)}
&ty --------------------------------------------------------------------------
&ty
&ty     Current commandline: &r %aml$file% %quad% %tile%
&ty
&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml

&if [null %quad%] &then &do
    &s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.
    &end

&workspace %.home%
/* ------------ Edit this Section -------------------------------
/* put header variables and other semi-global code here
/*&s src-type = cover
/*   &s src = fwtc_f             /* source cover (flipped streams)
/*   &s dest = fwtc              /* destination cover (repository streams)
/*   &s src = fctr               /* contours
/*   &s dest = fctr
&s src-type = grid
   &s src = dem_hs               /* shaded relief grid
   &s dest = fshd                /* name of shade in repository
/*   &s src = dem                  /* digital elevation model
   &s src = dem_flak             /* flattened lake dem
   &s dest = fdem                /* name of dem in repository

&s bak = %dest%_org            /* backup of original destination cover
&s root = z:\arcdata\50k\base  /* root dir of repository
&s err =                       /* initilize empty error variable
&set move_back = yes           /* do we move the backup out of the repository?
/* ---------------- End of Section ------------------------------
&severity &error &routine problems

/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &set quad = [listfile * -directory]
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile * -directory]
/* check for tile argument
&if not [null %tile%] &then &set tile_arg = yes

&do quad &list [unquote %quad%]
  &workspace %quad%; &type ...entering %quad%
    /* check for TODO list on the command line, else TODO = existing workspaces
    &if [null %tile%] &then &set tile = [listfile * -workspace]

        &do tile &list [unquote %tile%]
            &set dest-path = %root%\%quad%\%tile%
            &call main
        &end

    /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
    &if not [variable tile_arg] &then &set tile =

  &workspace  ..
&end

&type ...Replacement errors for tiles: %err%

&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
/* temporary code to clean up a bug -----------------------------
/*&if [exists %tile%\%dest%.replaced -file] &then~
/*   &sys move %tile%\%dest%.replaced %dest-path%\%dest%.replaced
/* --------------------------------------------------------------
   /* if cover has already been replaced, skip this tile
/*   &if [exists %dest-path%\%dest%.replaced -file] &then &return

   /* if no source cover|grid exists, skip this tile
   &if not [exists %tile%\%src% -%src-type%] &then &return

   /*-------mark workspace busy----------------------
   &if [exists %tile%\lock -file] &then &return
   &set lockfile = [OPEN %tile%\lock openstat -write]
   &if  %openstat% = 0 &then &type ...workspace %tile% locked
     &else &return Error %openstat% opening lockfile
   /*------------------------------------------------
   &workspace %tile%

/*&call move_backs
/*&goto End_Loop
   &if %src-type% = cover &then &do /* we don't need to back up dems
      /* make backup copy of original repository cover
      &if not [exists %dest-path%\%bak% -%src-type%] &then
         /* but only if there -is- an original dataset
         &if [exists %dest-path%\%dest% -%src-type%] &then
            copy %dest-path%\%dest% %dest-path%\%bak%
      &end
   /* delete existing repository cover
   &if [exists %dest-path%\%dest% -%src-type%] &then
      kill %dest-path%\%dest% all

   &if [exists %src% -cover] &then
      clip %src% %dest-path%\fneat %dest-path%\%dest%  line 0.00000001
   &else
      latticeclip %src% buf_100m %dest-path%\%dest%


   /* verify everything to this point is okay, COVER specific
   &if %src-type% = cover &then &do
      &if [exists %dest-path%\%dest% -%src-type%] ~
         AND [exists %dest-path%\%bak% -%src-type%] &then
            &sys echo ...[upcase %src%] has replaced [upcase %dest-path%\%dest%] >  %dest-path%\%dest%.replaced
      &else &do
         &set err = %err% %tile%
         &type ...%tile% replacement seems to have gone wrong
         &end
   &end
   /* verify everything to this point is okay, GRID specific
   &if %src-type% = grid &then &do
      &if [exists %dest-path%\%dest% -%src-type%] &then
         &sys echo ...[upcase %src%] has replaced [upcase %dest-path%\%dest%] >  %dest-path%\%dest%.replaced
         &else &do
            &set err = %err% %tile%
            &type ...%tile% replacement seems to have gone wrong
            &end
   &end

   &if %move_back% = yes &then &call move_backs

&label End_Loop

   &workspace ..
   /*-------mark workspace not busy-----------------
   &if [close %lockfile%] = 0 &then
     &type ...workspace %tile% unlocked
     &else &return Error closing lockfile
   &if [delete %tile%\lock -file] <> 0 &then
      &return &error ...Error removing %tile%\lock
   /*-----------------------------------------------
&RETURN
/*---------------------------------------------------------------------------
/* other routines go here
&routine problems
&run beep; &run beep
&ty ***
&s exit = [getchar '*** Problems encountered. Continue?(Y,n)' y]
   &if %exit% = y &then &return
      &else &return ...exiting by user request after problems encountered.
&return
/*---------------------------------------------------------------------------

/*---------------------------------------------------------------------------
&routine move_backs /* move backed up covers out of repository
/*&set root = z:\arcdata\50k\lims
/*&set dest-path = %root%\%quad%\%tile%

   &set back-root = [subst [quote %root%] arcdata arcdata_old]
   &set back-path = [subst [quote %dest-path%] arcdata arcdata_old]

   &if not [exists %back-root%\%quad% -workspace] &then cw %back-root%\%quad%
   &if not [exists %back-path% -workspace] &then cw %back-path%

   /* copy existing backup to z:\arcdata_old\50k\base\<quad>\<tile>\<cover>
   &if [exists %dest-path%\%bak% -%src-type%] &then
      copy %dest-path%\%bak% %back-path%\%bak%

   /* delete existing repository cover
   &if [exists %dest-path%\%bak% -%src-type%] &then
      kill %dest-path%\%bak% all

&return
/*---------------------------------------------------------------------------

&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================
/* End Of UPDATE-LIBRARY.aml
/*===========================================================================