&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tile:REST
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 18-Sept-2k
&ty     ::Step #::  (see scripts\__ReadMe.aml)
&ty
&ty     - convert all floating point grids to integer format (saves disk space)
&ty
&ty   * only run if there are no grids which you want to keep floating point *
&ty
&ty     Autorun: &r %aml$file% {quad} {tile(s)}
&ty --------------------------------------------------------------------------
&if [null %quad%] &then &do
    &s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.
    &end

&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml
&workspace %.home%

/* put header variables and other semi-global code here
&if [locase[show program]] <> grid &then GRID /* we must be in GRID to work

/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &set quad = [listfile * -directory]
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile * -directory]
/* check for tile argument
&if not [null %tile%] &then &set tile_arg = yes

&do quad &list [unquote %quad%]
  &workspace %.home%\%quad%; &type ...entering %quad%
    /* check for TODO list on the command line, else TODO = existing workspaces
    &if [null %tile%] &then &set tile = [listfile * -workspace]

        &do for_each &list [unquote %tile%]
            &call main
        &end

    /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
    &if not [variable tile_arg] &then &set tile =

  &workspace  ..
&end

&if [locase[show program]] = grid &then QUIT /* exit GRID
&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
  &workspace %.home%\%quad%\%for_each%
    /*-------mark workspace busy----------------------
    &if [exists lock -file] &then &return
    &set lockfile = [OPEN lock openstat -write]
    &if  %openstat% = 0 &then &type ...workspace %for_each% locked
        &else &return Error %openstat% opening lockfile
    /*------------------------------------------------

        &do grids &list [listfile * -grid]   /* generate grid list
            &if [null %grids%] &then &goto end_int /* skip if no grids
                &describe %grids%          /* skip if already integer
                    &if %grd$type% = 1 &then &goto end_int
                &s scratch = [scratchname] /* generate temp grid name

                %scratch% = INT(%grids%)   /* convert to integer
                kill %grids% all           /* kill original grid
                rename %scratch% %grids%   /* rename temp to original
                   &type    renamed %scratch% to %grids%

            &label end_int /* re-entry point from "if already integer"
/*            &stop /* debug break point
        &end

    /*-------mark workspace not busy-----------------
    &if [close %lockfile%] = 0 &then
        &type ...workspace %for_each% unlocked
        &else &return Error closing lockfile
    &sys del lock
    /*-----------------------------------------------
  &workspace ..
&RETURN
/*---------------------------------------------------------------------------
/* other routines go here

&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================
/* End Of float2int.aml
/*===========================================================================
