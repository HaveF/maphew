&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tile:REST
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 04-Oct-2k
&ty     ::Step 7::  (see scripts\__ReadMe.aml)
&ty
&ty     - Flip drainage arcs such that all streams run downhill
&ty
&ty     Autorun: &r %aml$file% {quad} {tile(s)}
&ty --------------------------------------------------------------------------
&if [null %quad%] &then &do
    &s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.
    &end

&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml
&workspace %.home%

/* put header variables and other semi-global code here
&set dem = flip_grd
&set draincov = fwtc

/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &set quad = [listfile * -directory]
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile * -directory]
/* check for tile argument, if yes make a note of it
&if not [null %tile%] &then &set tile_arg = yes

&do quad &list [unquote %quad%]
  &workspace %quad%; &type ...entering %quad%
    /* check for TODO list on the command line, else TODO = existing workspaces
    &if not [variable tile_arg] &then &set tile = [listfile * -workspace]

        &do tile &list [unquote %tile%]
            &call main
        &end

    /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
    &if not [variable tile_arg] &then &set tile =

  &workspace  ..
&end

&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
   /* we use a done marker because if no streams need to be flipped, drain_directions deletes the flipped cover.
   &if [exists %tile%\flip_streams.done -file] &then &return
       /*-------mark workspace busy----------------------
       &if [exists %tile%\lock -file] &then &return
       &set lockfile = [OPEN %tile%\lock openstat -write]
       &if  %openstat% = 0 &then &type ...workspace %tile% locked
           &else &return Error %openstat% opening lockfile
       /*------------------------------------------------
      &workspace %tile%

         /* drain_direction.aml is usually located in the global aml directory
         /* Usage: &run drain_direction.aml <dem> <drainage_cover>
         &run drain_direction.aml %dem% %draincov%

         &if [exists %draincov%_f -cover] &then &do
               &type ...setting done marker
               &sys echo All done! > flip_streams.done
               &end

         &type ...                    [date -vfull] * Minutes since last: [calc [extract 2 [show &pt all]] / 60]
/*&pause /* debug breakpoint

      &workspace ..
      /*-------mark workspace not busy-----------------
      &if [close %lockfile%] = 0 &then
          &type ...workspace %tile% unlocked
          &else &return Error closing lockfile
      &sys del %tile%\lock
      /*-----------------------------------------------
&RETURN
/*---------------------------------------------------------------------------
/* other routines go here

&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================
/* End Of Flip_Streams.aml
/*===========================================================================