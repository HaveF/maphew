&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tiles:REST
&ty   -----------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 12-Dec-2k
&ty     ::Step 1::  (see scripts\__ReadMe.aml)
&ty
&ty     - creates a directory framework in the '%.home%' directory based on
&ty       which tiles in the repository contain data:
&ty
&ty             ...\<quad>\<tile>\       ...\115A\115a16\
&ty
&ty     - To only process specified tiles, use:
&ty
&ty            "&run %aml$file% . {tile1} {tile2} {tile3} ..."
&ty
&ty   -----------------------------------------------------------------------
&if %quad% <> . &then &do
    &s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.
    &end

&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml
&workspace %.home%

/* put header variables and other semi-global code here
&set testcov = fneat
&set root = %.library%  /* eg: z:\arcdata\50k\base

&if not [null %tiles%] &then &call commandline
&if [null %tiles%] &then &call MAIN

&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
/*for each quad which exists in repository do...
&do quad &list [listfile %root%\0* -directory] [listfile %root%\1* -directory]
   &type ...checking %quad%
   /* for each tile which exists in repository do ...
   &do tile &list [listfile %root%\%quad%\* -workspace]
      /*&type             %tile%
      /* if neatline cover exists then...
      &if [exists %root%\%quad%\%tile%\%testcov% -cover] &then &do
         /* create development quad workspace
         &if not [exists %quad% -workspace] &then createworkspace %quad%
         /* create dev tile ws
         &if not [exists %quad%\%tile% -workspace] &then &do
            cw %quad%\%tile%
            &type    created %quad%\%tile%
            &end
      /*end if-exists-neatline test
      &end
   /*end for-each-tile
   &end
/*end for-each-quad
&end
&RETURN
/*---------------------------------------------------------------------------
/* other routines go here

&routine commandline
   /* for each tile do...
   &do tile &list [unquote %tiles%]
      /* the 1st four characters are the major nts name (quad)
      /*  [substring <string> <position> {num_chars}]
      &set quad = [substr %tile% 1 4]
      /*&type ...checking %quad%\%tile%
      /* if neatline cover exists in repsoitory then...
      &if [exists %root%\%quad%\%tile%\%testcov% -cover] &then &do
         /* create development quad workspace
         &if not [exists %quad% -workspace] &then createworkspace %quad%
         /* create dev tile ws
         &if not [exists %quad%\%tile% -workspace] &then &do
            cw %quad%\%tile%
            &type    created %quad%\%tile%
            &end
      /*end if-exists-neatline test
      &end
   /*end for-each-tile do
   &end
&return ...[upcase %aml$fullfile%] finished commandline mode normally.

&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================
/* End Of MAKE_TILESTRUCT.aml
/*===========================================================================

