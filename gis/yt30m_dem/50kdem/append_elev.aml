/*===========================================================================
&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tile:REST
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 12-Sept-2k
&ty     ::Step #::  (see scripts\__ReadMe.aml)
&ty
&ty     - get, clip & build FCTR covers for tiles which don't have FLIP_GRDs
&ty --------------------------------------------------------------------------
&if [null %quad%] &then &do
    &s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.
    &end

&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml
&workspace %.home%

/* put header variables and other semi-global code here
&setvar cover = fctr
&setvar data = elevation

/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &set quad = [listfile * -directory]
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile * -directory]
/* check for tile argument
&if not [null %tile%] &then &set tile_arg = yes

&do quad &list [unquote %quad%]
  &workspace %quad%; &type ...entering %quad%
    /* check for TODO list on the command line, else TODO = existing workspaces
    &if [null %tile%] &then &set tile = [listfile * -workspace]

        &do tile &list [unquote %tile%]
            &call main
        &end

    /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
    &if not [variable tile_arg] &then &set tile =

  &workspace  %.home%
&end

&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
  &workspace %.home%\%quad%\%tile%
    /*-------mark workspace busy----------------------
    &if [exists lock -file] &then &return
    &set lockfile = [OPEN lock openstat -write]
    &if  %openstat% = 0 &then &type ...workspace %tile% locked
        &else &return Error %openstat% opening lockfile
    /*------------------------------------------------
    /* do local contours already exist?
    &if [exists fctr -cover] &then  &goto End_Main /* or: kill fctr all
    /* no need for local contours if there is already a dem here
    /* &if [exists flip_grd -grid] &then &goto End_Main

     &type Processing %tile%... [show workspace]

    /* ------------------------------------------------------------------------
    &severity &error &ignore
    kill %cover% all    /* for some reason some fctr coverages are "half there" - an empty fctr directory and some fctr info files. thus 'if exists -cover' fails
    &sys rd /s/q %cover%
    &severity &error &routine bail
    /* ------------------------------------------------------------------------
    &messages &on

    &sys ARC APPEND %cover% link < %cover%.path
    /*&stop /* debug break point

    BUILD %cover% LINE /* build their topology
    BUILD %cover% POINT /* build their topology
    &DO /* remove previous messes, clip watercourse to 2km buffer boundary, clean up intermediate files
       &if [exist %cover%_clip -cover] &then kill %cover%_clip all
       CLIP %cover% buf_2k %cover%_clip LINK 0.0000001
       kill %cover% all
       rename %cover%_clip %cover% ; &type renamed %cover%_clip %cover%
    &END
    /* ------------------------------------------------------------------------
/*&stop /* debug break point

    &label End_Main

    /*-------mark workspace not busy-----------------
    &if [close %lockfile%] = 0 &then
        &type ...workspace %tile% unlocked
        &else &return Error closing lockfile
    &sys del lock
    /*-----------------------------------------------
  &workspace ..
&RETURN
/*============================================================================
&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================


/* ----------------------------------------------------------------------------
/* SCRAPBOOK * nothing below this line gets executed. &routine labels have
/* their ampersands removed to prevent accidental execution
/* ----------------------------------------------------------------------------
routine Reference_Only
/* this how it was done last time around, it is kept here now solely for debugging and reference purposes

&type /&-=<{ Begin loop processing with tile: Index-id = %IDX% /& <<<<<<<<<<---------------------------------------->>>>>>>>>>

    &type /&-=<{ begin library access/& ----------------------------------------
    librarian
        library rr50                                /* set [library]
        setlayers elevation waterbody watercourse   /* set [data_sources] (use show layers to see avail.)
        setcover %IDX%_buf                          /* set [area_interest]
        extract simple                              /* the actual extraction
    quit

    /* clip: <incover> <clipping poly> <outcover> [data-type; LINK=line & point]
    &type /&-=<{ begin clipping covers/& ----------------------------------------
    mkdir %IDX%
    clip fctr %IDX%_buf %IDX%\fctr LINK
    clip fwtb %IDX%_buf %IDX%\wtb RAW       /* was POLY but got err: "not a polygon coverage"; data problem?
    clip fwtc %IDX%_buf %IDX%\wtc LINE

    &type /&-=<{ clean up intermediate files/& -----------------------------------
    kill fctr all ; kill fwtb all ; kill fwtc all

 &type /&<<<<<<<<<<------------ End Of Loop ----------------------->>>>>>>>>>/&
&end
&echo &off
&return

/* ----------------------------------------------------------------------------
ROUTINE CLIP  /* ONLY NEED THIS IF USING "extract simple"
/* NOTE: no longer works as is, needs to be edited first
   /* clip: <incover> <clipping poly> <outcover> [data-type; LINK=line & point]
   &type /&-=<{ begin clipping covers/& ----------------------------------------
   mkdir %tile%
   clip fctr %tile%_buf %tile%\fctr LINK
   clip fwtb %tile%_buf %tile%\wtb RAW       /* was POLY but got err: "not a polygon coverage"; data problem?
   clip fwtc %tile%_buf %tile%\wtc LINE

   &type /&-=<{ clean up intermediate files/& -----------------------------------
   kill fctr all ; kill fwtb all ; kill fwtc all

&RETURN

ROUTINE BAIL_APPEND
    &messages &on
    &type *** An error occured while entering coverages in APPEND. Attempting to recover...
    &if [locase [show program]] = arc &then &return Too late! Already at ARC prompt.

    /* &type  ****** An error occured while entering coverages. ******
    &type sending END to the Append process...
    &type Use FINDLOCK.CMD to locate incomplete workspaces later.
    &echo &on
    &watch k:\50k_dem\get_h2o.watch.%tile% &append &commands
    &goto bail_out
&RETURN
