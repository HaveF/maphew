&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tiles:REST
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 12-Dec-2k
&ty     ::Step *All*::  (see z:\arcutils\aml\50kdem\__ReadMe.aml)
&ty
&ty     - Wrapper script which goes through every step from beginning to end
&ty       (excepting 'make_tilestruct.aml' which should be run manually first)
&ty
&ty     * Dependencies:
&ty         + Global Variables which must be set:
&ty               .home       the workspace everything will be rooted under
&ty               .library    base dir for the source data
&ty               .index      path to the library index poly cover
&ty           Example:
&ty               &set .home = x:\new50kdems
&ty               &set .library = z:\arcdata\50k\base
&ty               &set .index = %.library%\database\index
&ty
&ty         +AML Search Path must include 'z:\arcutils\aml\50kdem'
&ty         +The ArcInfo programs: Arc, ArcEdit, ArcPlot, Grid
&ty         +The ANUDEM bin directory must be in path (x:\anudem\bin)
&ty         +The unix utilities grep, sed, cat & tail must be in path
&ty           (see \\killerbee\downloads\apps\programming\cygwin)
&ty
&ty
&ty  Autorun: &r %aml$file% {quad} {tile(s)}
&ty --------------------------------------------------------------------------
&ty
&ty     Current commandline: &r %aml$file% %quad% %tiles%
&ty
&if not [variable .library] &then &return &error Project Environment is not setup. Look for z:\arcutils\aml\50kdem\setenv.aml

&if [null %quad%] &then &do
    &s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.
    &end

&workspace %.home%

/* put header variables and other semi-global code here
&severity &warning &routine uhoh
&if not [exists progress -directory] &then &sys mkdir progress

/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &do /* if placeholder, extract quad list from tiles
   &set quad =
   &do for_each &list [unquote %tiles%]
      &set quad = %quad% [substr %for_each% 1 4]
   &end /*end for-each
   &end
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile 0* -directory] [listfile 1* -directory]
/* check for tile argument
&if not [null %tiles%] &then &set tile_arg = yes

&do quad &list [unquote %quad%]
   &workspace %.home%
   &workspace %quad%; &type ...entering %quad%

      /* check for TODO list on the command line, else TODO = existing workspaces
      &if [null %tiles%] &then &set tiles = [listfile * -workspace]

         &do tile &list [unquote %tiles%]
            &call main
         &end

      /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
      &if not [variable tile_arg] &then &set tiles =

   &workspace ..
&end

&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
   &if [exists %.home%\progress\%tile% -file] &then &return

   /* &run <aml> {quad} {tile(s)}
   /* run this one manually first
      /*&run make_tilestruct %quad% %tiles%
   &run make_buffers %quad% %tiles%
   &run find_paths %quad% %tiles%
   &run clip_lakes %quad% %tiles%
   &run append_elev %quad% %tiles%
   &run append_h2o %quad% %tiles%
   &run make_flipgrid %quad% %tiles%
   &run flip_streams %quad% %tiles%
   &run anudem %quad% %tiles% /* OR:  make_dems |
   &run flat_lakes %quad% %tiles%
   &run float2int %quad% %tiles%

   &set dem = dem; &set shade = dem_hs
   &run make_shade %dem% %shade% %quad% %tiles%

   &run clip_100m %quad% %tiles%

   &run mosaic_250k %quad%

   /*&set dest_dir = %.home%\release\250k
   /*&run pkg_250k %dest_dir% %quad%

   /*&set dest_dir = %.home%\release\50k
   /*&run pkg_50k %dest_dir% %quad% %tile%

   /*&set item = dem_hs; &set shade-30m
   /*&run grid2catalog %item% %catalog% %quad%

   &sys echo %tile% is hogtied!> %.home%\progress\%tile%

&RETURN
/*---------------------------------------------------------------------------
/* other routines go here
&routine uhoh
   &run beep; &run beep; &run beep
   &set msg = '*** UhOh! An error has occured. Do we continue? (y,N)'
   &if [locase[response %msg% n]] = y &then &return
&return &error *** Exiting %aml$file% by user request after an error ***

&routine bail
   &run beep; &run beep; &run beep; &run beep; &run beep; &run beep
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &error %str%
/*===========================================================================
/* End Of WHOLE-HOG.aml
/*===========================================================================