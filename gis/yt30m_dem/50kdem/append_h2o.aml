/*===========================================================================
&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tile:REST
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 26-Sept-2k
&ty     ::Step 6::  (see scripts\__ReadMe.aml)
&ty
&ty     - append overlapping watercourse coverages into single cover and clip
&ty       to 2km buffer.
&ty     * warning this script requires "sed" to be installed and in path
&ty
&ty     Autorun: &r %aml$file% {quad} {tile(s)}
&ty --------------------------------------------------------------------------
&if [null %quad%] &then &do
    &s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.
    &end

&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml
&workspace %.home%

/* put header variables and other semi-global code here
&set appcov = fwtc /* the covers to combine

/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &set quad = [listfile * -directory]
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile * -directory]
/* check for tile argument
&if not [null %tile%] &then &set tile_arg = yes

&do quad &list [unquote %quad%]
  &workspace %quad%; &type ...entering %quad%
    /* check for TODO list on the command line, else TODO = existing workspaces
    &if [null %tile%] &then &set tile = [listfile * -workspace]

        &do tile &list [unquote %tile%]
            &call main
        &end

    /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
    &if not [variable tile_arg] &then &set tile =

  &workspace  ..
&end

&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
&if [exists %tile%\%appcov% -cover] &then &return
&if [exists %tile%\%appcov%_f -cover] &then &return /* for flipped streams
    /*-------mark workspace busy----------------------
    &if [exists %tile%\lock -file] &then &return
    &set lockfile = [OPEN %tile%\lock openstat -write]
    &if  %openstat% = 0 &then &type ...workspace %tile% locked
        &else &return Error %openstat% opening lockfile
    /*------------------------------------------------
    &workspace %tile%
    /*&if not [exists %appcov%.path -file] &then &call build_paths
    &call build_paths
/*&goto end_loop

    &if not [exists %appcov% -cover] &then ~
        &DO
            /* this way we can make append read in params from an external file directly, rather than screw around with AML read directives
            &sys ARC  APPEND fwtc line < %appcov%.path
            /* build topology
            BUILD %appcov% line
        &END

    &DO /* remove previous mess if any
        &if [exist %appcov%_clip -cover] &then kill %appcov%_clip all
        &severity &error &ignore
            /* clip to 2km buffer boundary
            CLIP %appcov% buf_1k %appcov%_clip line /*0.00001
        &severity &error &routine bail
        &if [exists %appcov%_clip  -cover] &then ~
            &do
                /* replace original with clipped cover
                kill %appcov% all
                rename %appcov%_clip %appcov% ; &ty ...renamed %appcov%_clip %appcov%
            &end
    &END

/*&label end_loop

    /*-------mark workspace not busy-----------------
    &if [close %lockfile%] = 0 &then
        &type ...workspace %tile% unlocked
        &else &return Error closing lockfile
    &sys del lock
    /*-----------------------------------------------
  &workspace ..
&RETURN
/*---------------------------------------------------------------------------
/* other routines go here
/*---------------------------------------------------------------------------
&routine build_paths
    &if [exists %appcov%.path -file] &then &return
    /* change "z:\arcdata...\105d" to "z:\arcdata...\105d\fwtc"
    &sys sed [quote s/$/\\%appcov%/] overlap.path.bare > %appcov%.path
    /* Add "end" directive to the end of the file
    &sys echo END >> %appcov%.path
    &type    %appcov%.path built.
&return
&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================
/* End Of Append_H2O.aml
/*===========================================================================
