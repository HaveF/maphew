/*===========================================================================
&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tile:REST
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 02-Aug-2k
&ty     ::Step 5::  (see scripts\__ReadMe.aml)
&ty
&ty     - create 100m DEM in order to perform stream flipping
&ty --------------------------------------------------------------------------
&if [null %quad%] &then &do
    &s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.
    &end

&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml
&workspace %.home%

/* put header variables and other semi-global code here
    /* Topogrid changes the &Format setting to 7. Modules like Project and ProjectDefine will bomb if &Format is set higher than 4.
    /* save &Format decimal places
    &set sav_format = [show &format]
    /* coverage with lake boundaries with Elevations
    &set lake_ctr = lake_ctr
    /* pixel size in meters
    &set cell-size = 200

/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &set quad = [listfile * -directory]
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile * -directory]
/* check for tile argument
&if not [null %tile%] &then &set tile_arg = yes

&do quad &list [unquote %quad%]
  &workspace %quad%; &type ...entering %quad%
    /* check for TODO list on the command line, else TODO = existing workspaces
    &if [null %tile%] &then &set tile = [listfile * -workspace]

        &do tile &list [unquote %tile%]
            /*--------
             &CALL MAIN
            /*--------
        &end

    /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
    &if not [variable tile_arg] &then &set tile =

  &workspace  ..
&end

/* restore &Format decimal places.
&format %sav_format%
&if [show &format] > 4 &then &format 4

&type ... To conserve diskspace, it would be a good idea to run FLOAT2INT.aml now.
&RETURN ...[upcase %aml$fullfile%] finished normally.

/* ============================================================================
&ROUTINE MAIN
&workspace %.home%\%quad% /* in case last loop returned early and didn't exit tile dir
    /* ------------------------------------------------
    &if [exists %tile%\lock -file] &then &return
    &set lockfile = [OPEN %tile%\lock openstat -write]
    &if  %openstat% = 0 &then &type ...workspace %tile% locked
        &else &return Error %openstat% opening lockfile
    /* ------------------------------------------------

    &workspace %tile%
    &type ...Minutes since last: [calc [extract 2 [show &pt all]] / 60]

   /*&call kill_prev /* enable this if this is the second time around and previous grids need to be erased

    /*&if [exists lake_ctr -cover] &then &call kill_prev /* because previous grids were generated with lake_ctr using feet (Z) instead of meters (Z_metric)

    &if [exists dem -grid] &then &goto Fini
    &if [exists flip_grd -grid] &then &goto Fini

    &LABEL MAKE_GRID
    &call kill_prev

    &type ...generating flipping grid
    /* topogrid changes &format to 7, which causes any function involved with writing a projection file to screw up
    &set save_format = [show &format]

&severity &error &ignore
    TOPOGRID flip_grd %cell-size%
    BOUNDARY buf_2k
    ENFORCE ON
    DATATYPE CONTOUR
    MARGIN 0.0
    ITERATIONS 30
    TOLERANCES 2.5 2.0   0.0
    CONTOUR %lake_ctr% Z_metric
    OUTPUTS flip_sink flip_drain flip_diag

    /* if no local fctr cover, then call 'read from repository' routine
    &if [exists fctr -cover] &then CONTOUR fctr Z_metric
        &else &call from_file

    /* see if this tile has Alaska point data
    &if [exists ak_pnt -point] &then
        POINT ak_pnt Z
    END /* exit topogrid config and make dem

      /* trap any errors
      &set check = %aml$sev%
      &if %check% ne 0 &then
         /* report errors
         &type ......Trapped error message => [value aml$message]
         &sys echo [value aml$message] > "[value aml$message].err"

      &format %save_format%   /* restore saved &format settings

    /* clip flip_grd dem to 3km border
    latticeclip flip_grd buf_2k flip_clip
    kill flip_grd all
    rename flip_clip flip_grd ; &ty ...Renamed flip_clip to flip_grd
&severity &error &routine bail

    &label Fini
    &if [locase[show program]] = topogrid &then QUIT

    &type ...Minutes since last: [calc [extract 2 [show &pt all]] / 60]
    &workspace ..
    /*--------------------------------
    &if [close %lockfile%] = 0 &then
        &type ...workspace %tile% unlocked
        &else &return Error closing lockfile
    &sys del %tile%\lock
    /*--------------------------------
/*&stop /*debug break point
&RETURN
/* --------------------------------------------------------------------------
&routine kill_prev
    &type ...killing off Round I mistakes
    &if [exists flip_grd -grid] &then kill flip_grd all
    &if [exists flip_sink -cover] &then kill flip_sink all
    &if [exists flip_drain -cover] &then kill flip_drain all
    &sys if exist flip_diag del flip_diag
    &sys if exist flip_stream.done del flip_stream.done
&return
/* --------------------------------------------------------------------------
&routine from_file
    /* read in list of overlapping contour coverages from file "qctr.path", generate CONTOUR <coverage> Z line for each
    &set pathfile = overlap.path.bare
    &s fileunit = [open %pathfile% openstat -read]
        &if %openstat% <> 0 &then
            &return &warning Error opening %tile%\%pathfile% (%openstat%)
    &s src =
    /* Read from file
    &setvar line := [read %fileunit% readstat]
        &if %readstat% <> 0 &then
          &return &warning Could not read %tile%\%pathfile% (%readstat%)
    &do &while %readstat% = 0
        /* -----------------------------
        /* this line gets passed up to Topogrid
         CONTOUR [unquote %line%]\fctr Z_metric
        /*------------------------------
        /* Read next line.
        &setvar line := [read %fileunit% readstat]
    &end
    &s closestat = [close %fileunit%]
        &if %closestat% <> 0 &then
            &return &warning Error closing %tile%\%pathfile% (%closestat%)
&return
/* ===========================================================================
&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================
