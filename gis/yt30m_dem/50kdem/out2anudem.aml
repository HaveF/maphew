&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tile:REST
&ty
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated 50k DEM * mhw * 30-Nov-2001
&ty     ::Step #::  (see scripts\__ReadMe.aml)
&ty
&ty      -export contours, streams, boundary poly, etc. to ungenerate files
&ty      -calc stats (min/max elev, bounds) and set optimal tolerances
&ty      -write anudem.cmd file
&ty      -run anudem
&ty      -convert anudem outputs (dem and diagnostic files) to Arc
&ty
&ty     Autorun: &r %aml$file% {quad} {tile(s)}
&ty --------------------------------------------------------------------------
&ty thanks to Timothy N. Loesch, Minnesota Department of Natural Resources
&ty
&s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.

&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml
&workspace %.home%

/*===========================================================================
/* Conceptual Model, For each tile do: (- done, + todo)
/*
/*    -export contours, streams, boundary poly, etc. to ungenerate files
/*    -calc stats (min/max elev, bounds) [optimal tolerances?]
/*    -write anudem.cmd file
/*    -run anudem
/*    +convert anudem outputs (dem and diagnostic files) to Arc
/*    +delete intermediate files(?)
/*===========================================================================

/* put header variables and other semi-global code here
&set elev = Z_metric
&set contours = fctr
&set watercourses = fwtc_f
&set lake_ctr = lake_ctr   /* lake boundarys as contours
&set cover_list = %contours% %watercourses% %lake_ctr%
&set feature = line /* TODO: update for poly covers so we can include boundary and lake polygons
&set cell-size = 30  /* pixel size in meters
&set dem = dem       /* the dem name, when in ArcInfo


/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &set quad = [listfile * -directory]
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile * -directory]
/* check for tile argument
&if not [null %tile%] &then &set tile_arg = yes

&do quad &list [unquote %quad%]
  &workspace %quad%; &type ...entering %quad%
    /* check for TODO list on the command line, else TODO = existing workspaces
    &if [null %tile%] &then &set tile = [listfile * -workspace]

        &do tile &list [unquote %tile%]
            &set msg =
            &if [exists %tile%\%dem% -grid] &then
               &set msg = %tile%\%dem% exists
            &if [exists %tile%\%dem% -grid] &then
               &goto End_tile
            &CALL MAIN
            &label End_Tile
            &ty ... %msg%
        &end

    /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
    &if not [variable tile_arg] &then &set tile =

  &workspace  ..
&end

&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
  &workspace %tile%
    /*-------mark workspace busy----------------------
    &if [exists lock -file] &then &return
    &set lockfile = [OPEN lock openstat -write]
    &if  %openstat% = 0 &then &type ...workspace %tile% locked
        &else &return Error %openstat% opening lockfile
    /*------------------------------------------------

      &type ...[date -vfull] * Minutes past: [calc [extract 2 [show &pt all]] / 60]

      &call cover2generate    /* Arc to generate file
      &call build_cmd         /* build ANUDEM command file
      &call build_dem         /* ANUDEM makes the dem
      &call adem2grid         /* ANUDEM dem to Arc Grid

      &type ...[date -vfull] * Minutes past: [calc [extract 2 [show &pt all]] / 60]

    /*-------mark workspace not busy-----------------
    &if [close %lockfile%] = 0 &then
        &type ...workspace %tile% unlocked
        &else &return Error closing lockfile
    &sys del lock
    /*-----------------------------------------------
  &workspace ..
&return
/* ------------------------------------------------------------------------

/* ------------------------------------------------------------------------
&routine cover2generate
   &do cover &list [unquote %cover_list%]
      &if not [exists %cover% -cover] &then &goto End_c2g
      &if [exists %cover%.gen.gz -file] &then &goto End_c2g
      &if [exists %cover%.gen -file] &then &goto do_gzip
      &set edit-cov = [scratchname]
      copy %cover% %edit-cov%

      /* if the elevation field doesn't exist, go straight to ungenerate
      &if [iteminfo %cover%.aat -info %elev% -exists] &then
         &do ; ArcEdit
         /* thanks to CSIRO, Australia for this AE tip (http://www.ffp.csiro.au/nfm/mdp/softqaa.htm#ar1)
            edit %edit-cov% %feature%
            select all
            calculate $id = %elev%
            save
         quit ; &end

      ungenerate %feature% %edit-cov% %cover%.gen # fixed
      kill %edit-cov% all
      /* compress ungenerate file to save disk space; using Start sends the task to background so we can carry on without waiting
      &label do_gzip
      /* don't need this, the covers are zipped after building the dem
      /* &sys start /b gzip %cover%.gen
      &label End_c2g
   &end
&return
/* ------------------------------------------------------------------------

/* ------------------------------------------------------------------------
&routine build_cmd
&describe [extract 1 %cover_list%]
&s enforce = 1       /* Enforcement [Off|On|Diag]
&s main_type = 1     /* contours=1, points=0
&s rms = 1.0         /* RMS  (1.0)
&s vse = 0.0         /* vertical SE (0.0)
&s rough = 0.5      /* roughness tradeoff penalty; contour=0.0, point=0.5
&call Tolerances     /* autocalc the values from input data
   /* &s Tol_1 =        /* half contour interval
   /* &s Tol_2 =        /* half the total elevation span
&s iterate = 40      /* max number of iterations (40)
&s Zunit = 1         /* 1=meters, 2=feet
/* autocalc'd in Tolerances routine
   /*&s minZ =          /* Elevation Extent
   /*&s maxZ =
&s pix-cnt = 1          /* pixel center = center of cell or corners (1)
&s hor-unit = 1         /* horizontal units, meters=1

&s cell-size = %cell-size%      /* size of single pixel in ground units
/* ------------------------------------
/* Min--Max's autocalc'd from earlier &describe
&s minX = [before %dsc$xmin% .]                       /* Longitude min-max
   &s minX = %minX% - [mod %minX% %cell-size%]
&s maxX = [before %dsc$xmax% .]
   &s offset = %cell-size% - [mod %maxX% %cell-size%]
   &s maxX = %maxX% + %offset%
&s minY = [before %dsc$ymin% .]                       /* Latitude min-max
   &s minY = %minY% - [mod %minY% %cell-size%]
&s maxY = [before %dsc$ymax% .]
   &s offset = %cell-size% - [mod %maxY% %cell-size%]
   &s maxY = %maxY% + %offset%
/* special thanks to Timothy N. Loesch, Minnesota Department of Natural Resources, for providing the Avenue example script which helped me figure this part out. -matt
/* ------------------------------------

/*  no need to specify, columns/rows are automatically calculated by ANUDEM
&s out-cols =              /* num output columns
&s out-rows =              /* num output rows
&s margin   = 0.0          /* Margin (default = 20)
&s wrk-cols =              /* num working columns
&s wrk-rows =              /* num working rows

/* ---------------------------------------------------------------------
&s in_total =           /* # of input data files (auto calculated later)
/* ANUDEM type #s for ArcInfo ungenerate input data types:
/*    21=ARC/INFO POINT DATA    24=ARC/INFO POLYGON
/*    22=ARC/INFO SINK POINT    25=ARC/INFO CONTOUR
/*    23=ARC/INFO STREAMLINE    26=ARC/INFO LAKE BDRY
/* &s in_%cover% = path to ungenerate file
/* &s in_%cover% = ANUDEM type #
&s in_cont = %contours%.gen         /* contours
&s in_cont# = 25
&s in_lakectr = %lake_ctr%.gen  /* lake boundaries as contours
&s in_lakectr# = 25

&s in_pnt1 = /* ak_pnt.gen       /* alaskan point data
&s in_pnt1# = /* 21
&s in_pnt2 = /* bc_pnt.gen       /* BC point data
&s in_pnt2# = /* 21

&s in_crik = %watercourses%.gen         /* stream lines
&s in_crik# = 23
&s in_lake = /* fwtb.gen      /* lake boundaries as lake boundaries
&s in_lake# = /* 26

&s in_bnd = /* buf_1k.gen     /* area of interest polygon
&s in_bnd# = /* 24
/* ---------------------------------------------------------------------

&s out-dem = %tile%.dem    /* output dem
&s out-type = 2            /* dem datatype (2 = Arc Ascii GRID)
&s out-def =               /* dataype definition (blank=bin, (8F10.3)=ascii)

/* diagnostics
&s sinks = %tile%-dem.snk       /* sink errors
&s out-crik =              /* output streams (blank | %tile%-dem.crk)
&s res = %tile%-dem.res         /* large residuals
&s strmer = %tile%-dem.ser      /* stream errors
&s bnder = %tile%-dem.ber       /* boundary poly errors
&s conter = %tile%-dem.cer      /* contour errors
&s laker = %tile%-dem.ler       /* lake errors
&s grid_pnt =              /* grid point (blank | %tile%-dem.pnt)
&s aspect =                /* aspect grid (blank | %dem%.asp)


&s cmdfile = %tile%-dem.cmd   /* ANUDEM command file
/* ------------------------------------------------------------------------

/* ------------------------------------------------------------------------
/* build the ANUDEM command file. !NOTE! the command order is immutable
&sys echo %enforce%        >  %cmdfile%  /* enforce off|on|diag
&sys echo %main_type%      >> %cmdfile%  /* Main datatype is...
&sys echo %rms% %vse%      >> %cmdfile%  /* RMS and vertical SE = 1.0 0.0
&sys echo %rough%          >> %cmdfile%  /* Roughness Trade-Off = 0.05
&sys echo %Tol_1% %Tol_2%  >> %cmdfile%  /* tolerances
&sys echo %iterate%        >> %cmdfile%  /* Max Iterations = 40
&sys echo %Zunit%          >> %cmdfile%  /* meters = 1
&sys echo %minZ% %maxZ%    >> %cmdfile%  /* vertical extents
&sys echo %pix-cnt%        >> %cmdfile%  /* pixel center is = 1 (in center)
&sys echo %hor-unit%       >> %cmdfile%  /* Hor. Units = 1 (meters)
&sys echo %minX% %maxX%    >> %cmdfile%  /* Long. extents
&sys echo %minY% %maxY%    >> %cmdfile%  /* Lat. extents
&sys echo %cell-size%      >> %cmdfile%  /* cell size
&sys echo %out-cols%       >> %cmdfile%   /* output columns
&sys echo %out-rows%       >> %cmdfile%   /* output rows
&sys echo %margin%         >> %cmdfile%   /* margin
&sys echo %wrk-cols%       >> %cmdfile%   /* working grid columns
&sys echo %wrk-rows%       >> %cmdfile%   /* working grid rows
&do   /* cycle through all input data until done
   &s inputs = %in_cont% %in_cont#% %in_crik% %in_crik#% %in_lake% %in_lake#%
   &s in_total = [token %inputs% -count] / 2
      &sys echo %in_total%    >> %cmdfile%   /* number of input data files
   &do input_each &list %inputs%
      &sys echo %input_each%  >> %cmdfile%
   &end
&end
/* output files
&sys echo %out-dem%       >> %cmdfile%  /* output demfile
&sys echo %out-type%      >> %cmdfile%  /* output flavour (ArcGRID Ascii, etc.)
&sys echo %out-def%       >> %cmdfile%  /* output type definition (ascii, binary)
/* diagnostics output
&sys echo %sinks%       >> %cmdfile%      /* sink errors
&sys echo %out-crik%    >> %cmdfile%      /* output streams (blank | %dem%.crk)
&sys echo %res%         >> %cmdfile%      /* large residuals
&sys echo %strmer%      >> %cmdfile%      /* stream errors
&sys echo %bnder%       >> %cmdfile%      /* boundary poly errors
&sys echo %conter%      >> %cmdfile%      /* contour errors
&sys echo %laker%       >> %cmdfile%      /* lake errors
&sys echo %grid_pnt%    >> %cmdfile%      /* grid point (blank | %dem%.pnt)
&sys echo %aspect%      >> %cmdfile%      /* aspect grid (blank | %dem%.asp)

/* strip ECHO lines which should be blank
&sys sed 's/^.*ECHO.*$//' %cmdfile% > %cmdfile%-tmp
&sys del %cmdfile%
&sys rename %cmdfile%-tmp %cmdfile%

/* this doesn't seem to be necessary under Windows 2000:
/*&sys unix2dos %cmdfile%

&type ...ANUDEM %cmdfile% file is built.
/*&listlocal /* debug line
&return
/* ------------------------------------------------------------------------
&routine BUILD_DEM
&type ...building %dem%
   &sys if exist *.gz gunzip *.gz
      &sys anudemc.exe <%tile%-dem.cmd 1>stdout.log 2>stderr.log
      &sys start type stdout.log
   &sys if exist *.gen gzip *.gen
&return
/* ------------------------------------------------------------------------
/* ------------------------------------------------------------------------
&routine adem2grid
&type ...converting Anudem %out-dem% to Arc %dem%
   &if [exists %dem% -grid] &then &do
      &type ...[upcase %dem%] already exists!
      &return ; &end
   floatgrid %out-dem% %dem%

/*&echo &on /* debug line
/* for some reason we are getting an error message with this:
/*       "PROJECT ERROR : Line 1 - Unrecognized keyword"
&ty   you can safely ignore "Unrecognized keyword" errors
   projectdefine grid %dem%
         Projection    ALBERS
         Datum         NAD83
         Zunits        NO
         Units         METERS
         Spheroid      GRS1980
         Xshift        0.0000000000
         Yshift        0.0000000000
         Parameters
          61 40  0.000 /* 1st standard parallel
          68  0  0.000 /* 2nd standard parallel
         -132 30  0.000 /* central meridian
          59  0  0.000 /* latitude of projection's origin
         500000.00000 /* false easting (meters)
         500000.00000 /* false northing (meters)

   &sys start /b gzip %out-dem%
/*&echo &off /* debug line
&return
/* ------------------------------------------------------------------------
&routine tolerances
/* Tolerance 1 is half the contour interval
/* Tolerance 2 is half the total relief (min-max elevation)
   /* list unique elevation values for center tile
   &set unique = [listunique %contours%.aat -info %elev%]
   /* get the first two values (which are the lowest)
   &set val_1 = [extract 1 %unique%]
   &set val_2 = [extract 2 %unique%]
   /* and the last (also the maximum)
   &set count = [token %unique% -count]
   &set last = [extract %count% %unique%]

   /* subtract from each other to get the contour interval, divide by 2
   &set half = ( %val_2% - %val_1% ) / 2
   /* strip everything after the decimal
   &set Tol_1 = [before [quote %half%] .]

   /* find half total elevation span
   &set half = ( %last% - %val_1% ) / 2
   /* strip everything after the decimal
   &set Tol_2 = [before [quote %half%] .]

   &set minZ = [before [quote %val_1%] .]
   &set maxZ = [before [quote %last%] .]

   &type     half contour interval is %Tol_1% meters. Half relief is %Tol_2%.

   /* clean out temporary variables
   &delvar val_* count last half unique
&return
/* ------------------------------------------------------------------------

&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================
/* End Of Out2ANUDEM.aml
/*===========================================================================
