&severity &error &routine bail
/* if there are commandline arguments, make them the TODO list
&args quad tile:REST
&ty --------------------------------------------------------------------------
&ty   * [upcase %aml$file%] * Project: Updated LIMS 50k DEM * mhw * 18-Sept-2k
&ty     ::Step #::  (see scripts\__ReadMe.aml)
&ty
&ty     *INDISCRIMINATELY* kills off all flipping grids and associated files
&ty
&ty
&ty     Autorun: &r %aml$file% {quad} {tile(s)}
&ty --------------------------------------------------------------------------
&s pause [response '<Enter> to continue, something else to abort']
    &if not [null %pause%] &then &return %aml$file% exited by user request.

&if not [variable .library] &then &return &error Project Environment is not setup. Look for ./scripts/setenv.aml
&workspace %.home%

/* put header variables and other semi-global code here

/* follow ...\<quad>\<tile>\  (...\115h\115h12\)  pattern
/* check for quad placeholder (allows "&r aml_prog . 105d11 105d12 105d13")
&if %quad% = . &then &set quad = [listfile * -directory]
/* check for quad commandline args
&if [null %quad%] &then &set quad = [listfile * -directory]
/* check for tile argument
&if not [null %tile%] &then &set tile_arg = yes

&do quad &list [unquote %quad%]
  &workspace %quad%; &type ...entering %quad%
    /* check for TODO list on the command line, else TODO = existing workspaces
    &if [null %tile%] &then &set tile = [listfile * -workspace]

        &do tile &list [unquote %tile%]
            &call main
        &end

    /* if tile arg is autogenerated, null out else it won't be generated anew for next loop
    &if not [variable tile_arg] &then &set tile =

  &workspace  ..
&end

&RETURN ...[upcase %aml$fullfile%] finished normally.

/*============================================================================
&ROUTINE MAIN
   /*-------mark workspace busy----------------------
   &if [exists %tile%\lock -file] &then &return
   &set lockfile = [OPEN %tile%\lock openstat -write]
   &if  %openstat% = 0 &then &type ...workspace %tile% locked
     &else &return Error %openstat% opening lockfile
   /*------------------------------------------------
   &workspace %tile%

      &type ...killing off flip_grd and friends
      &if [exist flip_grd -grid] &then kill flip_grd all
      &if [exist flip_sink -cover] &then kill flip_sink all
      &if [exist flip_drain -cover] &then kill flip_drain all
      &sys if exist flip_diag del flip_diag

   &workspace ..
   /*-------mark workspace not busy-----------------
   &if [close %lockfile%] = 0 &then
     &type ...workspace %tile% unlocked
     &else &return Error closing lockfile
   &sys del %tile%\lock
   /*-----------------------------------------------
&RETURN
/*---------------------------------------------------------------------------
/* other routines go here

&routine bail
   &if not [variable str] &then &s str Bailing out of %aml$file%...
   &return; &return &warning %str%
/*===========================================================================
/* End Of KILL_FLIPGRIDS.aml
/*===========================================================================
